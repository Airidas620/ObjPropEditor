<UserControl x:Class="VisualPropertyEditor.PropertyEditorControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:conv="clr-namespace:VisualPropertyEditor.Abstractions.Classes.Converters"
             xmlns:enums="clr-namespace:VisualPropertyEditor.Abstractions.Enums"
             xmlns:models="clr-namespace:VisualPropertyEditor.Models"
             xmlns:MaterialIcons ="clr-namespace:Material.Icons;assembly=Material.Icons"
             xmlns:MaterialIconsWpf ="clr-namespace:Material.Icons.WPF;assembly=Material.Icons.WPF"
             xmlns:local="clr-namespace.VisualPropertyEditor"
             mc:Ignorable="d"
             d:DesignHeight="450">
    <UserControl.Resources>

        <BooleanToVisibilityConverter x:Key="BoolToVis" />


        <Style TargetType="Button"
               x:Key="RoundButton">
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius"
                            Value="60" />
                </Style>
            </Style.Resources>
        </Style>

        <DataTemplate x:Key="bool">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding PropertyName}"
                           VerticalAlignment="Center" />
                <CheckBox Grid.Column="1"
                          IsChecked="{Binding ValueAsBool}"
                          Margin="5,0,0,0" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="string">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <TextBlock Text="{Binding PropertyName}"
                           VerticalAlignment="Center" />
                <TextBox Grid.Column="1"
                         MinWidth="70"
                         Margin="5,0,30,0"
                         Text="{Binding ValueAsString}" />
            </Grid>
        </DataTemplate>


        <DataTemplate x:Key="numeric">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding PropertyName}"
                           VerticalAlignment="Center" />
                <TextBox Grid.Column="1"
                         MinWidth="70"
                         PreviewTextInput="NumberValidationTextBox"
                         Margin="5,0,30,0"
                         Text="{Binding NumericValueAsString}">
                    <TextBox.Style>
                        <Style TargetType="TextBox"
                               BasedOn="{StaticResource {x:Type TextBox}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsInputValueValid}"
                                             Value="true">
                                    <Setter Property="BorderBrush"
                                            Value="#FFCCCCCC" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsInputValueValid}"
                                             Value="false">
                                    <Setter Property="BorderBrush"
                                            Value="Red" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="enum">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding PropertyName}"
                           VerticalAlignment="Center" />
                <ComboBox  Grid.Column="1"
                           MinWidth="70"
                           ItemsSource="{Binding AvailableEnumValues}"
                           Margin="5,0,0,0"
                           SelectedItem="{Binding ValueAsEnum}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="Class">
            <Expander Header="{Binding PropertyName , Converter={conv:ObjectHeaderConverter}}"
                      IsExpanded="True"
                      BorderBrush="#CC238cde">
                <ItemsControl ItemsSource="{Binding InnerPropertyDescriptions}"
                              ItemTemplate="{DynamicResource DataTemplateTriggers}"
                              Margin="3,0,3,0">
                </ItemsControl>
            </Expander>
        </DataTemplate>


        <DataTemplate x:Key="List">
            <Expander IsExpanded="True"
                      Header="{Binding PropertyName, Converter={conv:ListHeaderConverter}}"
                      BorderBrush="#CC238cde"
                      MinWidth="300">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <ItemsControl ItemsSource="{Binding ListItems}">

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="auto"></ColumnDefinition>
                                        <ColumnDefinition Width="auto"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <ContentControl Content="{Binding}"
                                                    ContentTemplate="{DynamicResource DataTemplateTriggers}"
                                                    Margin="3,0,3,0" />
                                    <Button Grid.Column="1" Command="{Binding DuplicateListItemCommand}"
                                            Margin="5,3,5,0"
                                            Height="35"
                                            Width="35"
                                            VerticalAlignment="top">
                                        <Button.Content>
                                            <MaterialIconsWpf:MaterialIcon Kind="ContentCopy" Height="22" Width="22" >
                                                 
                                            </MaterialIconsWpf:MaterialIcon>

                                        </Button.Content>
                                    </Button>
                                    <Button Grid.Column="2" Command="{Binding RemoveFromListCommand}"
                                            Margin="0,3,5,0"
                                            Height="35"
                                            Width="35"
                                            Foreground="#bf3b3b"
                                            VerticalAlignment="top">
                                        <Button.Content>
                                            <MaterialIconsWpf:MaterialIcon Kind="Delete"  Height="22" Width="22" >

                                            </MaterialIconsWpf:MaterialIcon>
                                        </Button.Content>
                                    </Button>

                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <Button Command="{Binding AddToListCommand}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Margin="3,1,0,5"
                            MaxWidth="35"
                            BorderThickness="0"
                            Style="{DynamicResource RoundButton}"
                            Background="White"
                            Grid.Column="1">
                        <Button.Content>
                            <MaterialIconsWpf:MaterialIcon Kind="PlusCircle" Height="34" Width="34" HorizontalAlignment="Center" Foreground="#CC238cde" >

                            </MaterialIconsWpf:MaterialIcon>
                        </Button.Content>

                    </Button>
                </Grid>
            </Expander>
        </DataTemplate>

        <DataTemplate x:Key="DataTemplateTriggers">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <ContentControl Content="{Binding}"
                                Margin="0,7,0,7">
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Style.Triggers>

                                <DataTrigger Binding="{Binding GeneralProperty}"
                                             Value="{x:Static enums:PossibleTypes.Bool}">
                                    <Setter Property="ContentTemplate"
                                            Value="{StaticResource bool}" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding GeneralProperty}"
                                             Value="{x:Static enums:PossibleTypes.Numeric}">
                                    <Setter Property="ContentTemplate"
                                            Value="{StaticResource numeric}" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding GeneralProperty}"
                                             Value="{x:Static enums:PossibleTypes.String}">
                                    <Setter Property="ContentTemplate"
                                            Value="{StaticResource string}" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding GeneralProperty}"
                                             Value="{x:Static enums:PossibleTypes.Enum}">
                                    <Setter Property="ContentTemplate"
                                            Value="{StaticResource enum}" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding GeneralProperty}"
                                             Value="{x:Static enums:PossibleTypes.List}">
                                    <Setter Property="ContentTemplate"
                                            Value="{StaticResource List}" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding GeneralProperty}"
                                             Value="{x:Static enums:PossibleTypes.Class}">
                                    <Setter Property="ContentTemplate"
                                            Value="{StaticResource Class}" />
                                </DataTrigger>

                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
            </Grid>
        </DataTemplate>

    </UserControl.Resources>


    <Grid Margin="10"
          HorizontalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <TextBlock TextWrapping="Wrap"
                   HorizontalAlignment="Stretch"
                   FontSize="14"
                   Grid.Row="0"
                   Margin="0 0 0 20"
                   FontWeight="SemiBold"
                   Visibility="{Binding HasDescription, Converter={StaticResource BoolToVis}}"
                   Text="{Binding ClassDescription}"></TextBlock>

        <ScrollViewer Grid.Row="1"
                      VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Auto"
                      HorizontalContentAlignment="Stretch">
            

            <ItemsControl ItemsSource="{Binding AllAvailableProperties}"
                          ItemTemplate="{DynamicResource DataTemplateTriggers}"
                          HorizontalAlignment="Stretch"
                          >
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel HorizontalAlignment="Stretch" Margin="100,0,100,0"></StackPanel>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </ScrollViewer>
    </Grid>

</UserControl>
